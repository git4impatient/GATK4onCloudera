#SUCCESSFUL WORKING SESSION - GATK4 ran in google cloud
#lots of cleanup to do to simplify process, but this works

# (c) copyright 2016 Martin Lurie 7/7/2016  sample code not supported

#==============
#notes on port forwarding to get to CM web UI
#[marty@cloudera-director-46afe32b-54a1-496c-89fe-71378db5450f gatk]$ echo use this:  ssh -i martygooglecloud.key -g -L 9090:10.142.0.3:7180 104.196.10.156
#use this: ssh -i martygooglecloud.key -g -L 9090:10.142.0.3:7180 104.196.10.156
#[marty@cloudera-director-46afe32b-54a1-496c-89fe-71378db5450f gatk]$ echo 10.x.x.x is target host we want to reach - in this case the cm host
#10.x.x.x is target host we want to reach - in this case the cm host
#[marty@cloudera-director-46afe32b-54a1-496c-89fe-71378db5450f gatk]$ echo 104.x.x.x is the gatewayhost which could be the same as the cm host
#104.x.x.x is the gatewayhost which could be the same as the cm host
#[marty@cloudera-director-46afe32b-54a1-496c-89fe-71378db5450f gatk]$ 
#===========

#start google cloud cluster with Cloudera Director - go script
#see: https://wiki.cloudera.com/pages/viewpage.action?spaceKey=FieldTechServices&title=Best+practices+for+Cloudera+use+of+AWS+and+keeping+costs+down
#for scripts


   
# need oracle java 
# GET RPM FROM ORACLE
# log into a host in the clustere
# scp jdk and ssh key 
# 
# scp -i marty*key /home/marty/Downloads/jdk-8u60-linux-x64.rpm 104.196.24.83:
# scp -i marty*key martygooglecloud.key 104.196.24.83:
#
export HOSTS="10.142.0.2 10.142.0.3 10.142.0.4 10.142.0.5 10.142.0.6"
export JAVA_HOME=/usr/java/jdk1.8.0_60/jre
ls -l ~/jdk-8u60-linux-x64.rpm
for i in $HOSTS ; do scp -i marty*key jdk-8u60-linux-x64.rpm $i:/tmp ; done
for i in $HOSTS; do ssh  -i ~/martygooglecloud.key $i "sudo rpm -ivh /tmp/jdk-8u60-linux-x64.rpm"; done
for i in $HOSTS; do ssh  -i ~/martygooglecloud.key $i "sudo alternatives --set java /usr/java/jdk1.8.0_60/jre/bin/java";java -version; done
for i in $HOSTS; do ssh  -i ~/martygooglecloud.key $i "sudo sed -i '$ a export JAVA_HOME=/usr/java/jdk1.8.0_60/jre' /etc/profile"; done
for i in $HOSTS; do ssh  -i ~/martygooglecloud.key $i "tail -3 /etc/profile"; done
for i in $HOSTS; do ssh  -i ~/martygooglecloud.key $i "java -version"; done
# 
sudo yum install -y curl unzip gcc python-setuptools git automake gcc-c++
wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip     && unzip google-cloud-sdk.zip     && rm google-cloud-sdk.zip
sudo google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --disable-installation-options
 # need sudo su - marty -c 
mkdir /home/marty/gatk
 cd /home/marty/gatk
wget https://github.com/broadinstitute/cromwell/releases/download/0.19.3/cromwell-0.19.3.jar
pwd
wget https://github.com/broadinstitute/wdltool/releases/download/0.1/wdltool0.1.jar
git clone git://github.com/broadinstitute/gatk
cd gatk
 echo rebuild gatk
 ./gradlew clean
 ./gradlew installAll
# now upgrade java that cloudera uses
# 
ssh -i ~/martygooglecloud.key 104.196.31.98
echo get browser pointed at CM
# ssh tunneling:  ssh -i googlecloud.key -g -L portOnLocalhost:10networkhost:portOn10networkhost externalIPaddrOf10host
# example ssh -i martygooglecloud.key -g -L 9087:10.142.0.2:7180 104.196.24.83
echo STOP cluster
echo stop management cluster
echo stop agends
for i in $HOSTS; do ssh  -i ~/martygooglecloud.key $i "sudo /etc/init.d/cloudera-scm-agent stop"; done
echo change location of java in CM
for i in $CMHOST; do ssh  -i ~/martygooglecloud.key $i "sudo /etc/init.d/cloudera-scm-server stop"; done
echo update  /etc/default/cloudera-scm-server.
for i in $CMHOST; do ssh  -i ~/martygooglecloud.key $i "sudo sed -i '$ a export JAVA_HOME=/usr/java/jdk1.8.0_60/jre' /etc/default/cloudera-scm-server"; done
for i in $CMHOST; do ssh  -i ~/martygooglecloud.key $i "sudo tail /etc/default/cloudera-scm-server"; done
for i in $CMHOST; do ssh  -i ~/martygooglecloud.key $i "sudo /etc/init.d/cloudera-scm-server-db restart"; done
for i in $CMHOST; do ssh  -i ~/martygooglecloud.key $i "sudo /etc/init.d/cloudera-scm-server start"; done
 for i in $HOSTS; do ssh  -i ~/martygooglecloud.key $i "sudo /etc/init.d/cloudera-scm-agent start"; done
echo from the browser restart CM
echo get genomic file
     hadoop fs -ls
wget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/NA12878/alignment/NA12878.chrom11.ILLUMINA.bwa.CEU.low_coverage.20121211.bam
 hadoop fs -put NA12878.chrom11.ILLUMINA.bwa.CEU.low_coverage.20121211.bam NA12878.chrom11.ILLUMINA.bwa.CEU.low_coverage.20121211.bam
echo get NameNode address from Cloudera Manager web ui
export NN="cloudera-director-16c6f850-e688-40a9-a165-258ac6e68f7a.c.mydirector-1280.internal"

hadoop fs -ls hdfs://$NN:8020/user/marty

 ./gatk-launch  CountReadsSpark --input hdfs://cloudera-director-04476c61-8d72-484f-af33-0af9b6a1d253.c.mydirector-1280.internal:8020/user/marty/NA12878.chrom11.ILLUMINA.bwa.CEU.low_coverage.20121211.bam --output hdfs://cloudera-director-04476c61-8d72-484f-af33-0af9b6a1d253.c.mydirector-1280.internal:8020/user/marty/counted.out --sparkRunner SPARK --sparkMaster yarn-client -- --num-executors 4 --executor-cores 2 --executor-memory 1g --driver-memory=1g --conf spark.yarn.executor.memoryOverhead=450    --conf spark.yarn.am.memoryOverhead=450

 
 hadoop fs -ls counted.out
 hadoop fs -cat counted.out
                                                                                                                                                                                                                                                                           1,2           Top
